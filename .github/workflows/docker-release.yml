name: Docker Image

on:
  workflow_run:
    workflows: ["Build & Release (Self-contained / Single-file)"]
    types: [completed]
    branches: [main]

permissions:
  contents: read
  packages: write
  actions: read

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/telegrammonitor

jobs:
  docker:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      
      - uses: actions/download-artifact@v4
        with:
          pattern: linux-64*
          path: out/linux-x64
      - uses: actions/download-artifact@v4
        with:
          pattern: linux-arm64*
          path: out/linux-arm64
      - uses: actions/download-artifact@v4
        with:
          name: version           
          path: .

      
      - name: Verify artifacts
        run: |
          test -f version.txt                                         || { echo "::error::missing version"; exit 1; }
          test -f out/linux-x64/TelegramMonitor-linux-64.tar.gz       || { echo "::error::missing linux-64 tar"; exit 1; }
          test -f out/linux-arm64/TelegramMonitor-linux-arm64.tar.gz  || { echo "::error::missing linux-arm64 tar"; exit 1; }

      
      - id: ver
        run: echo "VERSION=$(cat version.txt)" >> "$GITHUB_OUTPUT"

      
      - run: tar -xzf out/linux-x64/TelegramMonitor-linux-64.tar.gz \
                -C out/linux-x64 --strip-components=1
      - run: tar -xzf out/linux-arm64/TelegramMonitor-linux-arm64.tar.gz \
                -C out/linux-arm64 --strip-components=1

      
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.ver.outputs.VERSION }}
            type=raw,value=latest

      
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: BIN_NAME=TelegramMonitor
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
