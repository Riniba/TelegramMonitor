name: Build & Auto Release (Framework-dependent)

on:
  push:
    branches:
      - main

permissions:
  contents: write
  workflows: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: "linux-64"
            rid: "linux-x64"
            artifact_name: "TelegramMonitor-linux-64.zip"
          - name: "linux-arm64"
            rid: "linux-arm64"
            artifact_name: "TelegramMonitor-linux-arm64.zip"

          - name: "osx-64"
            rid: "osx-x64"
            artifact_name: "TelegramMonitor-osx-64.zip"
          - name: "osx-arm64"
            rid: "osx-arm64"
            artifact_name: "TelegramMonitor-osx-arm64.zip"

          - name: "windows-32"
            rid: "win-x86"
            artifact_name: "TelegramMonitor-windows-32.zip"
          - name: "windows-64"
            rid: "win-x64"
            artifact_name: "TelegramMonitor-windows-64.zip"
          - name: "windows-arm64"
            rid: "win-arm64"
            artifact_name: "TelegramMonitor-windows-arm64.zip"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.101'

      - name: Publish (.NET, framework-dependent)
        run: |
          dotnet restore
          dotnet publish --configuration Release -r ${{ matrix.rid }} -o out/${{ matrix.rid }}


          cd out/${{ matrix.rid }}
          zip -r ../${{ matrix.artifact_name }} .
          cd ../..

      - name: Upload artifact
        uses: actions/upload-artifact@v4  
        with:
          name: ${{ matrix.name }}
          path: out/${{ matrix.artifact_name }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4  
        with:
          path: .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v1.0.5
          release_name: "1.0.5 版本"
          body: "TelegramMonitor 1.0.5 版本说明：\n- 修复 bug"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload linux-64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./linux-64/TelegramMonitor-linux-64.zip"
          asset_name: "TelegramMonitor-linux-64.zip"
          asset_content_type: application/zip

      - name: Upload linux-arm64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./linux-arm64/TelegramMonitor-linux-arm64.zip"
          asset_name: "TelegramMonitor-linux-arm64.zip"
          asset_content_type: application/zip

      - name: Upload osx-64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./osx-64/TelegramMonitor-osx-64.zip"
          asset_name: "TelegramMonitor-osx-64.zip"
          asset_content_type: application/zip

      - name: Upload osx-arm64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./osx-arm64/TelegramMonitor-osx-arm64.zip"
          asset_name: "TelegramMonitor-osx-arm64.zip"
          asset_content_type: application/zip

      - name: Upload windows-32
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./windows-32/TelegramMonitor-windows-32.zip"
          asset_name: "TelegramMonitor-windows-32.zip"
          asset_content_type: application/zip

      - name: Upload windows-64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./windows-64/TelegramMonitor-windows-64.zip"
          asset_name: "TelegramMonitor-windows-64.zip"
          asset_content_type: application/zip

      - name: Upload windows-arm64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./windows-arm64/TelegramMonitor-windows-arm64.zip"
          asset_name: "TelegramMonitor-windows-arm64.zip"
          asset_content_type: application/zip
